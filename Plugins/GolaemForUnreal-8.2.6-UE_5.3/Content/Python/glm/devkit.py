# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_devkit')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_devkit')
    _devkit = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_devkit', [dirname(__file__)])
        except ImportError:
            import _devkit
            return _devkit
        try:
            _mod = imp.load_module('_devkit', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _devkit = swig_import_helper()
    del swig_import_helper
else:
    import _devkit
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        if _newclass:
            object.__setattr__(self, name, value)
        else:
            self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except __builtin__.Exception:
    class _object:
        pass
    _newclass = 0

class uint8Array(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, uint8Array, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, uint8Array, name)
    __repr__ = _swig_repr

    def __init__(self, nelements):
        this = _devkit.new_uint8Array(nelements)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _devkit.delete_uint8Array
    __del__ = lambda self: None

    def __getitem__(self, index):
        return _devkit.uint8Array___getitem__(self, index)

    def __setitem__(self, index, value):
        return _devkit.uint8Array___setitem__(self, index, value)

    def cast(self):
        return _devkit.uint8Array_cast(self)
    if _newclass:
        frompointer = staticmethod(_devkit.uint8Array_frompointer)
    else:
        frompointer = _devkit.uint8Array_frompointer
uint8Array_swigregister = _devkit.uint8Array_swigregister
uint8Array_swigregister(uint8Array)

def uint8Array_frompointer(t):
    return _devkit.uint8Array_frompointer(t)
uint8Array_frompointer = _devkit.uint8Array_frompointer

class uint16Array(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, uint16Array, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, uint16Array, name)
    __repr__ = _swig_repr

    def __init__(self, nelements):
        this = _devkit.new_uint16Array(nelements)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _devkit.delete_uint16Array
    __del__ = lambda self: None

    def __getitem__(self, index):
        return _devkit.uint16Array___getitem__(self, index)

    def __setitem__(self, index, value):
        return _devkit.uint16Array___setitem__(self, index, value)

    def cast(self):
        return _devkit.uint16Array_cast(self)
    if _newclass:
        frompointer = staticmethod(_devkit.uint16Array_frompointer)
    else:
        frompointer = _devkit.uint16Array_frompointer
uint16Array_swigregister = _devkit.uint16Array_swigregister
uint16Array_swigregister(uint16Array)

def uint16Array_frompointer(t):
    return _devkit.uint16Array_frompointer(t)
uint16Array_frompointer = _devkit.uint16Array_frompointer

class uint32Array(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, uint32Array, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, uint32Array, name)
    __repr__ = _swig_repr

    def __init__(self, nelements):
        this = _devkit.new_uint32Array(nelements)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _devkit.delete_uint32Array
    __del__ = lambda self: None

    def __getitem__(self, index):
        return _devkit.uint32Array___getitem__(self, index)

    def __setitem__(self, index, value):
        return _devkit.uint32Array___setitem__(self, index, value)

    def cast(self):
        return _devkit.uint32Array_cast(self)
    if _newclass:
        frompointer = staticmethod(_devkit.uint32Array_frompointer)
    else:
        frompointer = _devkit.uint32Array_frompointer
uint32Array_swigregister = _devkit.uint32Array_swigregister
uint32Array_swigregister(uint32Array)

def uint32Array_frompointer(t):
    return _devkit.uint32Array_frompointer(t)
uint32Array_frompointer = _devkit.uint32Array_frompointer

class uint64Array(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, uint64Array, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, uint64Array, name)
    __repr__ = _swig_repr

    def __init__(self, nelements):
        this = _devkit.new_uint64Array(nelements)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _devkit.delete_uint64Array
    __del__ = lambda self: None

    def __getitem__(self, index):
        return _devkit.uint64Array___getitem__(self, index)

    def __setitem__(self, index, value):
        return _devkit.uint64Array___setitem__(self, index, value)

    def cast(self):
        return _devkit.uint64Array_cast(self)
    if _newclass:
        frompointer = staticmethod(_devkit.uint64Array_frompointer)
    else:
        frompointer = _devkit.uint64Array_frompointer
uint64Array_swigregister = _devkit.uint64Array_swigregister
uint64Array_swigregister(uint64Array)

def uint64Array_frompointer(t):
    return _devkit.uint64Array_frompointer(t)
uint64Array_frompointer = _devkit.uint64Array_frompointer

class int8Array(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, int8Array, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, int8Array, name)
    __repr__ = _swig_repr

    def __init__(self, nelements):
        this = _devkit.new_int8Array(nelements)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _devkit.delete_int8Array
    __del__ = lambda self: None

    def __getitem__(self, index):
        return _devkit.int8Array___getitem__(self, index)

    def __setitem__(self, index, value):
        return _devkit.int8Array___setitem__(self, index, value)

    def cast(self):
        return _devkit.int8Array_cast(self)
    if _newclass:
        frompointer = staticmethod(_devkit.int8Array_frompointer)
    else:
        frompointer = _devkit.int8Array_frompointer
int8Array_swigregister = _devkit.int8Array_swigregister
int8Array_swigregister(int8Array)

def int8Array_frompointer(t):
    return _devkit.int8Array_frompointer(t)
int8Array_frompointer = _devkit.int8Array_frompointer

class int16Array(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, int16Array, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, int16Array, name)
    __repr__ = _swig_repr

    def __init__(self, nelements):
        this = _devkit.new_int16Array(nelements)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _devkit.delete_int16Array
    __del__ = lambda self: None

    def __getitem__(self, index):
        return _devkit.int16Array___getitem__(self, index)

    def __setitem__(self, index, value):
        return _devkit.int16Array___setitem__(self, index, value)

    def cast(self):
        return _devkit.int16Array_cast(self)
    if _newclass:
        frompointer = staticmethod(_devkit.int16Array_frompointer)
    else:
        frompointer = _devkit.int16Array_frompointer
int16Array_swigregister = _devkit.int16Array_swigregister
int16Array_swigregister(int16Array)

def int16Array_frompointer(t):
    return _devkit.int16Array_frompointer(t)
int16Array_frompointer = _devkit.int16Array_frompointer

class int32Array(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, int32Array, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, int32Array, name)
    __repr__ = _swig_repr

    def __init__(self, nelements):
        this = _devkit.new_int32Array(nelements)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _devkit.delete_int32Array
    __del__ = lambda self: None

    def __getitem__(self, index):
        return _devkit.int32Array___getitem__(self, index)

    def __setitem__(self, index, value):
        return _devkit.int32Array___setitem__(self, index, value)

    def cast(self):
        return _devkit.int32Array_cast(self)
    if _newclass:
        frompointer = staticmethod(_devkit.int32Array_frompointer)
    else:
        frompointer = _devkit.int32Array_frompointer
int32Array_swigregister = _devkit.int32Array_swigregister
int32Array_swigregister(int32Array)

def int32Array_frompointer(t):
    return _devkit.int32Array_frompointer(t)
int32Array_frompointer = _devkit.int32Array_frompointer

class int64Array(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, int64Array, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, int64Array, name)
    __repr__ = _swig_repr

    def __init__(self, nelements):
        this = _devkit.new_int64Array(nelements)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _devkit.delete_int64Array
    __del__ = lambda self: None

    def __getitem__(self, index):
        return _devkit.int64Array___getitem__(self, index)

    def __setitem__(self, index, value):
        return _devkit.int64Array___setitem__(self, index, value)

    def cast(self):
        return _devkit.int64Array_cast(self)
    if _newclass:
        frompointer = staticmethod(_devkit.int64Array_frompointer)
    else:
        frompointer = _devkit.int64Array_frompointer
int64Array_swigregister = _devkit.int64Array_swigregister
int64Array_swigregister(int64Array)

def int64Array_frompointer(t):
    return _devkit.int64Array_frompointer(t)
int64Array_frompointer = _devkit.int64Array_frompointer

class sizetArray(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, sizetArray, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, sizetArray, name)
    __repr__ = _swig_repr

    def __init__(self, nelements):
        this = _devkit.new_sizetArray(nelements)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _devkit.delete_sizetArray
    __del__ = lambda self: None

    def __getitem__(self, index):
        return _devkit.sizetArray___getitem__(self, index)

    def __setitem__(self, index, value):
        return _devkit.sizetArray___setitem__(self, index, value)

    def cast(self):
        return _devkit.sizetArray_cast(self)
    if _newclass:
        frompointer = staticmethod(_devkit.sizetArray_frompointer)
    else:
        frompointer = _devkit.sizetArray_frompointer
sizetArray_swigregister = _devkit.sizetArray_swigregister
sizetArray_swigregister(sizetArray)

def sizetArray_frompointer(t):
    return _devkit.sizetArray_frompointer(t)
sizetArray_frompointer = _devkit.sizetArray_frompointer

class floatArray(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, floatArray, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, floatArray, name)
    __repr__ = _swig_repr

    def __init__(self, nelements):
        this = _devkit.new_floatArray(nelements)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _devkit.delete_floatArray
    __del__ = lambda self: None

    def __getitem__(self, index):
        return _devkit.floatArray___getitem__(self, index)

    def __setitem__(self, index, value):
        return _devkit.floatArray___setitem__(self, index, value)

    def cast(self):
        return _devkit.floatArray_cast(self)
    if _newclass:
        frompointer = staticmethod(_devkit.floatArray_frompointer)
    else:
        frompointer = _devkit.floatArray_frompointer
floatArray_swigregister = _devkit.floatArray_swigregister
floatArray_swigregister(floatArray)

def floatArray_frompointer(t):
    return _devkit.floatArray_frompointer(t)
floatArray_frompointer = _devkit.floatArray_frompointer

class intArray(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, intArray, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, intArray, name)
    __repr__ = _swig_repr

    def __init__(self, nelements):
        this = _devkit.new_intArray(nelements)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _devkit.delete_intArray
    __del__ = lambda self: None

    def __getitem__(self, index):
        return _devkit.intArray___getitem__(self, index)

    def __setitem__(self, index, value):
        return _devkit.intArray___setitem__(self, index, value)

    def cast(self):
        return _devkit.intArray_cast(self)
    if _newclass:
        frompointer = staticmethod(_devkit.intArray_frompointer)
    else:
        frompointer = _devkit.intArray_frompointer
intArray_swigregister = _devkit.intArray_swigregister
intArray_swigregister(intArray)

def intArray_frompointer(t):
    return _devkit.intArray_frompointer(t)
intArray_frompointer = _devkit.intArray_frompointer

GSC_PP_MAX_NAME_LENGTH = _devkit.GSC_PP_MAX_NAME_LENGTH
GSC_PP_FLOAT = _devkit.GSC_PP_FLOAT
GSC_PP_VECTOR = _devkit.GSC_PP_VECTOR
class GlmSimulationData_v0(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, GlmSimulationData_v0, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, GlmSimulationData_v0, name)
    __repr__ = _swig_repr
    __swig_setmethods__["_version"] = _devkit.GlmSimulationData_v0__version_set
    __swig_getmethods__["_version"] = _devkit.GlmSimulationData_v0__version_get
    if _newclass:
        _version = _swig_property(_devkit.GlmSimulationData_v0__version_get, _devkit.GlmSimulationData_v0__version_set)
    __swig_setmethods__["_contentHashKey"] = _devkit.GlmSimulationData_v0__contentHashKey_set
    __swig_getmethods__["_contentHashKey"] = _devkit.GlmSimulationData_v0__contentHashKey_get
    if _newclass:
        _contentHashKey = _swig_property(_devkit.GlmSimulationData_v0__contentHashKey_get, _devkit.GlmSimulationData_v0__contentHashKey_set)
    __swig_setmethods__["_licenseHashKey"] = _devkit.GlmSimulationData_v0__licenseHashKey_set
    __swig_getmethods__["_licenseHashKey"] = _devkit.GlmSimulationData_v0__licenseHashKey_get
    if _newclass:
        _licenseHashKey = _swig_property(_devkit.GlmSimulationData_v0__licenseHashKey_get, _devkit.GlmSimulationData_v0__licenseHashKey_set)
    __swig_setmethods__["_framerate"] = _devkit.GlmSimulationData_v0__framerate_set
    __swig_getmethods__["_framerate"] = _devkit.GlmSimulationData_v0__framerate_get
    if _newclass:
        _framerate = _swig_property(_devkit.GlmSimulationData_v0__framerate_get, _devkit.GlmSimulationData_v0__framerate_set)
    __swig_setmethods__["_assetGroupCount"] = _devkit.GlmSimulationData_v0__assetGroupCount_set
    __swig_getmethods__["_assetGroupCount"] = _devkit.GlmSimulationData_v0__assetGroupCount_get
    if _newclass:
        _assetGroupCount = _swig_property(_devkit.GlmSimulationData_v0__assetGroupCount_get, _devkit.GlmSimulationData_v0__assetGroupCount_set)
    __swig_setmethods__["_assetResetIndex"] = _devkit.GlmSimulationData_v0__assetResetIndex_set
    __swig_getmethods__["_assetResetIndex"] = _devkit.GlmSimulationData_v0__assetResetIndex_get
    if _newclass:
        _assetResetIndex = _swig_property(_devkit.GlmSimulationData_v0__assetResetIndex_get, _devkit.GlmSimulationData_v0__assetResetIndex_set)
    __swig_setmethods__["_assetRngSeeds"] = _devkit.GlmSimulationData_v0__assetRngSeeds_set
    __swig_getmethods__["_assetRngSeeds"] = _devkit.GlmSimulationData_v0__assetRngSeeds_get
    if _newclass:
        _assetRngSeeds = _swig_property(_devkit.GlmSimulationData_v0__assetRngSeeds_get, _devkit.GlmSimulationData_v0__assetRngSeeds_set)
    __swig_setmethods__["_entityCount"] = _devkit.GlmSimulationData_v0__entityCount_set
    __swig_getmethods__["_entityCount"] = _devkit.GlmSimulationData_v0__entityCount_get
    if _newclass:
        _entityCount = _swig_property(_devkit.GlmSimulationData_v0__entityCount_get, _devkit.GlmSimulationData_v0__entityCount_set)
    __swig_setmethods__["_entityIds"] = _devkit.GlmSimulationData_v0__entityIds_set
    __swig_getmethods__["_entityIds"] = _devkit.GlmSimulationData_v0__entityIds_get
    if _newclass:
        _entityIds = _swig_property(_devkit.GlmSimulationData_v0__entityIds_get, _devkit.GlmSimulationData_v0__entityIds_set)
    __swig_setmethods__["_entityTypes"] = _devkit.GlmSimulationData_v0__entityTypes_set
    __swig_getmethods__["_entityTypes"] = _devkit.GlmSimulationData_v0__entityTypes_get
    if _newclass:
        _entityTypes = _swig_property(_devkit.GlmSimulationData_v0__entityTypes_get, _devkit.GlmSimulationData_v0__entityTypes_set)
    __swig_setmethods__["_indexInEntityType"] = _devkit.GlmSimulationData_v0__indexInEntityType_set
    __swig_getmethods__["_indexInEntityType"] = _devkit.GlmSimulationData_v0__indexInEntityType_get
    if _newclass:
        _indexInEntityType = _swig_property(_devkit.GlmSimulationData_v0__indexInEntityType_get, _devkit.GlmSimulationData_v0__indexInEntityType_set)
    __swig_setmethods__["_scales"] = _devkit.GlmSimulationData_v0__scales_set
    __swig_getmethods__["_scales"] = _devkit.GlmSimulationData_v0__scales_get
    if _newclass:
        _scales = _swig_property(_devkit.GlmSimulationData_v0__scales_get, _devkit.GlmSimulationData_v0__scales_set)
    __swig_setmethods__["_characterIdx"] = _devkit.GlmSimulationData_v0__characterIdx_set
    __swig_getmethods__["_characterIdx"] = _devkit.GlmSimulationData_v0__characterIdx_get
    if _newclass:
        _characterIdx = _swig_property(_devkit.GlmSimulationData_v0__characterIdx_get, _devkit.GlmSimulationData_v0__characterIdx_set)
    __swig_setmethods__["_renderingTypeIdx"] = _devkit.GlmSimulationData_v0__renderingTypeIdx_set
    __swig_getmethods__["_renderingTypeIdx"] = _devkit.GlmSimulationData_v0__renderingTypeIdx_get
    if _newclass:
        _renderingTypeIdx = _swig_property(_devkit.GlmSimulationData_v0__renderingTypeIdx_get, _devkit.GlmSimulationData_v0__renderingTypeIdx_set)
    __swig_setmethods__["_entityTypeCount"] = _devkit.GlmSimulationData_v0__entityTypeCount_set
    __swig_getmethods__["_entityTypeCount"] = _devkit.GlmSimulationData_v0__entityTypeCount_get
    if _newclass:
        _entityTypeCount = _swig_property(_devkit.GlmSimulationData_v0__entityTypeCount_get, _devkit.GlmSimulationData_v0__entityTypeCount_set)
    __swig_setmethods__["_entityCountPerEntityType"] = _devkit.GlmSimulationData_v0__entityCountPerEntityType_set
    __swig_getmethods__["_entityCountPerEntityType"] = _devkit.GlmSimulationData_v0__entityCountPerEntityType_get
    if _newclass:
        _entityCountPerEntityType = _swig_property(_devkit.GlmSimulationData_v0__entityCountPerEntityType_get, _devkit.GlmSimulationData_v0__entityCountPerEntityType_set)
    __swig_setmethods__["_boneCount"] = _devkit.GlmSimulationData_v0__boneCount_set
    __swig_getmethods__["_boneCount"] = _devkit.GlmSimulationData_v0__boneCount_get
    if _newclass:
        _boneCount = _swig_property(_devkit.GlmSimulationData_v0__boneCount_get, _devkit.GlmSimulationData_v0__boneCount_set)
    __swig_setmethods__["_iBoneOffsetPerEntityType"] = _devkit.GlmSimulationData_v0__iBoneOffsetPerEntityType_set
    __swig_getmethods__["_iBoneOffsetPerEntityType"] = _devkit.GlmSimulationData_v0__iBoneOffsetPerEntityType_get
    if _newclass:
        _iBoneOffsetPerEntityType = _swig_property(_devkit.GlmSimulationData_v0__iBoneOffsetPerEntityType_get, _devkit.GlmSimulationData_v0__iBoneOffsetPerEntityType_set)
    __swig_setmethods__["_maxBonesHierarchyLength"] = _devkit.GlmSimulationData_v0__maxBonesHierarchyLength_set
    __swig_getmethods__["_maxBonesHierarchyLength"] = _devkit.GlmSimulationData_v0__maxBonesHierarchyLength_get
    if _newclass:
        _maxBonesHierarchyLength = _swig_property(_devkit.GlmSimulationData_v0__maxBonesHierarchyLength_get, _devkit.GlmSimulationData_v0__maxBonesHierarchyLength_set)
    __swig_setmethods__["_blindDataCount"] = _devkit.GlmSimulationData_v0__blindDataCount_set
    __swig_getmethods__["_blindDataCount"] = _devkit.GlmSimulationData_v0__blindDataCount_get
    if _newclass:
        _blindDataCount = _swig_property(_devkit.GlmSimulationData_v0__blindDataCount_get, _devkit.GlmSimulationData_v0__blindDataCount_set)
    __swig_setmethods__["_iBlindDataOffsetPerEntityType"] = _devkit.GlmSimulationData_v0__iBlindDataOffsetPerEntityType_set
    __swig_getmethods__["_iBlindDataOffsetPerEntityType"] = _devkit.GlmSimulationData_v0__iBlindDataOffsetPerEntityType_get
    if _newclass:
        _iBlindDataOffsetPerEntityType = _swig_property(_devkit.GlmSimulationData_v0__iBlindDataOffsetPerEntityType_get, _devkit.GlmSimulationData_v0__iBlindDataOffsetPerEntityType_set)
    __swig_setmethods__["_hasGeoBehavior"] = _devkit.GlmSimulationData_v0__hasGeoBehavior_set
    __swig_getmethods__["_hasGeoBehavior"] = _devkit.GlmSimulationData_v0__hasGeoBehavior_get
    if _newclass:
        _hasGeoBehavior = _swig_property(_devkit.GlmSimulationData_v0__hasGeoBehavior_get, _devkit.GlmSimulationData_v0__hasGeoBehavior_set)
    __swig_setmethods__["_iGeoBehaviorOffsetPerEntityType"] = _devkit.GlmSimulationData_v0__iGeoBehaviorOffsetPerEntityType_set
    __swig_getmethods__["_iGeoBehaviorOffsetPerEntityType"] = _devkit.GlmSimulationData_v0__iGeoBehaviorOffsetPerEntityType_get
    if _newclass:
        _iGeoBehaviorOffsetPerEntityType = _swig_property(_devkit.GlmSimulationData_v0__iGeoBehaviorOffsetPerEntityType_get, _devkit.GlmSimulationData_v0__iGeoBehaviorOffsetPerEntityType_set)
    __swig_setmethods__["_snsCountPerEntityType"] = _devkit.GlmSimulationData_v0__snsCountPerEntityType_set
    __swig_getmethods__["_snsCountPerEntityType"] = _devkit.GlmSimulationData_v0__snsCountPerEntityType_get
    if _newclass:
        _snsCountPerEntityType = _swig_property(_devkit.GlmSimulationData_v0__snsCountPerEntityType_get, _devkit.GlmSimulationData_v0__snsCountPerEntityType_set)
    __swig_setmethods__["_snsOffsetPerEntityType"] = _devkit.GlmSimulationData_v0__snsOffsetPerEntityType_set
    __swig_getmethods__["_snsOffsetPerEntityType"] = _devkit.GlmSimulationData_v0__snsOffsetPerEntityType_get
    if _newclass:
        _snsOffsetPerEntityType = _swig_property(_devkit.GlmSimulationData_v0__snsOffsetPerEntityType_get, _devkit.GlmSimulationData_v0__snsOffsetPerEntityType_set)
    __swig_setmethods__["_shapeExtents"] = _devkit.GlmSimulationData_v0__shapeExtents_set
    __swig_getmethods__["_shapeExtents"] = _devkit.GlmSimulationData_v0__shapeExtents_get
    if _newclass:
        _shapeExtents = _swig_property(_devkit.GlmSimulationData_v0__shapeExtents_get, _devkit.GlmSimulationData_v0__shapeExtents_set)
    __swig_setmethods__["_shapeOffset"] = _devkit.GlmSimulationData_v0__shapeOffset_set
    __swig_getmethods__["_shapeOffset"] = _devkit.GlmSimulationData_v0__shapeOffset_get
    if _newclass:
        _shapeOffset = _swig_property(_devkit.GlmSimulationData_v0__shapeOffset_get, _devkit.GlmSimulationData_v0__shapeOffset_set)
    __swig_setmethods__["_ppFloatAttributeCount"] = _devkit.GlmSimulationData_v0__ppFloatAttributeCount_set
    __swig_getmethods__["_ppFloatAttributeCount"] = _devkit.GlmSimulationData_v0__ppFloatAttributeCount_get
    if _newclass:
        _ppFloatAttributeCount = _swig_property(_devkit.GlmSimulationData_v0__ppFloatAttributeCount_get, _devkit.GlmSimulationData_v0__ppFloatAttributeCount_set)
    __swig_setmethods__["_ppFloatAttributeNames"] = _devkit.GlmSimulationData_v0__ppFloatAttributeNames_set
    __swig_getmethods__["_ppFloatAttributeNames"] = _devkit.GlmSimulationData_v0__ppFloatAttributeNames_get
    if _newclass:
        _ppFloatAttributeNames = _swig_property(_devkit.GlmSimulationData_v0__ppFloatAttributeNames_get, _devkit.GlmSimulationData_v0__ppFloatAttributeNames_set)
    __swig_setmethods__["_ppVectorAttributeCount"] = _devkit.GlmSimulationData_v0__ppVectorAttributeCount_set
    __swig_getmethods__["_ppVectorAttributeCount"] = _devkit.GlmSimulationData_v0__ppVectorAttributeCount_get
    if _newclass:
        _ppVectorAttributeCount = _swig_property(_devkit.GlmSimulationData_v0__ppVectorAttributeCount_get, _devkit.GlmSimulationData_v0__ppVectorAttributeCount_set)
    __swig_setmethods__["_ppVectorAttributeNames"] = _devkit.GlmSimulationData_v0__ppVectorAttributeNames_set
    __swig_getmethods__["_ppVectorAttributeNames"] = _devkit.GlmSimulationData_v0__ppVectorAttributeNames_get
    if _newclass:
        _ppVectorAttributeNames = _swig_property(_devkit.GlmSimulationData_v0__ppVectorAttributeNames_get, _devkit.GlmSimulationData_v0__ppVectorAttributeNames_set)
    __swig_setmethods__["_backwardCompatPPAttributeTypes"] = _devkit.GlmSimulationData_v0__backwardCompatPPAttributeTypes_set
    __swig_getmethods__["_backwardCompatPPAttributeTypes"] = _devkit.GlmSimulationData_v0__backwardCompatPPAttributeTypes_get
    if _newclass:
        _backwardCompatPPAttributeTypes = _swig_property(_devkit.GlmSimulationData_v0__backwardCompatPPAttributeTypes_get, _devkit.GlmSimulationData_v0__backwardCompatPPAttributeTypes_set)
    __swig_setmethods__["_entityWritten"] = _devkit.GlmSimulationData_v0__entityWritten_set
    __swig_getmethods__["_entityWritten"] = _devkit.GlmSimulationData_v0__entityWritten_get
    if _newclass:
        _entityWritten = _swig_property(_devkit.GlmSimulationData_v0__entityWritten_get, _devkit.GlmSimulationData_v0__entityWritten_set)
    __swig_setmethods__["_usedEntityPerEntityType"] = _devkit.GlmSimulationData_v0__usedEntityPerEntityType_set
    __swig_getmethods__["_usedEntityPerEntityType"] = _devkit.GlmSimulationData_v0__usedEntityPerEntityType_get
    if _newclass:
        _usedEntityPerEntityType = _swig_property(_devkit.GlmSimulationData_v0__usedEntityPerEntityType_get, _devkit.GlmSimulationData_v0__usedEntityPerEntityType_set)
    __swig_setmethods__["_entitiesWrittenInCache"] = _devkit.GlmSimulationData_v0__entitiesWrittenInCache_set
    __swig_getmethods__["_entitiesWrittenInCache"] = _devkit.GlmSimulationData_v0__entitiesWrittenInCache_get
    if _newclass:
        _entitiesWrittenInCache = _swig_property(_devkit.GlmSimulationData_v0__entitiesWrittenInCache_get, _devkit.GlmSimulationData_v0__entitiesWrittenInCache_set)
    __swig_setmethods__["_entityToBakeCount"] = _devkit.GlmSimulationData_v0__entityToBakeCount_set
    __swig_getmethods__["_entityToBakeCount"] = _devkit.GlmSimulationData_v0__entityToBakeCount_get
    if _newclass:
        _entityToBakeCount = _swig_property(_devkit.GlmSimulationData_v0__entityToBakeCount_get, _devkit.GlmSimulationData_v0__entityToBakeCount_set)
    __swig_setmethods__["_entityToBakeIndex"] = _devkit.GlmSimulationData_v0__entityToBakeIndex_set
    __swig_getmethods__["_entityToBakeIndex"] = _devkit.GlmSimulationData_v0__entityToBakeIndex_get
    if _newclass:
        _entityToBakeIndex = _swig_property(_devkit.GlmSimulationData_v0__entityToBakeIndex_get, _devkit.GlmSimulationData_v0__entityToBakeIndex_set)

    def __init__(self):
        this = _devkit.new_GlmSimulationData_v0()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _devkit.delete_GlmSimulationData_v0
    __del__ = lambda self: None
GlmSimulationData_v0_swigregister = _devkit.GlmSimulationData_v0_swigregister
GlmSimulationData_v0_swigregister(GlmSimulationData_v0)


def createSimulationData(simulationData, assetGroupCount, framerate, entityCount, entityTypeCount, ppFloatAttributeCount, ppVectorAttributeCount):
    return _devkit.createSimulationData(simulationData, assetGroupCount, framerate, entityCount, entityTypeCount, ppFloatAttributeCount, ppVectorAttributeCount)
createSimulationData = _devkit.createSimulationData

def createAndCopySimulationData(simulationDataSource, simulationDataDestination):
    return _devkit.createAndCopySimulationData(simulationDataSource, simulationDataDestination)
createAndCopySimulationData = _devkit.createAndCopySimulationData

def computeSimulationDataSize(data):
    return _devkit.computeSimulationDataSize(data)
computeSimulationDataSize = _devkit.computeSimulationDataSize

def computeContentHash(simulationData):
    return _devkit.computeContentHash(simulationData)
computeContentHash = _devkit.computeContentHash
GSC_VERSION = _devkit.GSC_VERSION
class GlmTrajectory_Smooth(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, GlmTrajectory_Smooth, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, GlmTrajectory_Smooth, name)
    __repr__ = _swig_repr
    __swig_setmethods__["_iterationCount"] = _devkit.GlmTrajectory_Smooth__iterationCount_set
    __swig_getmethods__["_iterationCount"] = _devkit.GlmTrajectory_Smooth__iterationCount_get
    if _newclass:
        _iterationCount = _swig_property(_devkit.GlmTrajectory_Smooth__iterationCount_get, _devkit.GlmTrajectory_Smooth__iterationCount_set)
    __swig_setmethods__["_frontBackRatio"] = _devkit.GlmTrajectory_Smooth__frontBackRatio_set
    __swig_getmethods__["_frontBackRatio"] = _devkit.GlmTrajectory_Smooth__frontBackRatio_get
    if _newclass:
        _frontBackRatio = _swig_property(_devkit.GlmTrajectory_Smooth__frontBackRatio_get, _devkit.GlmTrajectory_Smooth__frontBackRatio_set)
    __swig_setmethods__["_components"] = _devkit.GlmTrajectory_Smooth__components_set
    __swig_getmethods__["_components"] = _devkit.GlmTrajectory_Smooth__components_get
    if _newclass:
        _components = _swig_property(_devkit.GlmTrajectory_Smooth__components_get, _devkit.GlmTrajectory_Smooth__components_set)

    def __init__(self):
        this = _devkit.new_GlmTrajectory_Smooth()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _devkit.delete_GlmTrajectory_Smooth
    __del__ = lambda self: None
GlmTrajectory_Smooth_swigregister = _devkit.GlmTrajectory_Smooth_swigregister
GlmTrajectory_Smooth_swigregister(GlmTrajectory_Smooth)

class GlmTrajectory_VectorField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, GlmTrajectory_VectorField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, GlmTrajectory_VectorField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["_vectorFieldName"] = _devkit.GlmTrajectory_VectorField__vectorFieldName_set
    __swig_getmethods__["_vectorFieldName"] = _devkit.GlmTrajectory_VectorField__vectorFieldName_get
    if _newclass:
        _vectorFieldName = _swig_property(_devkit.GlmTrajectory_VectorField__vectorFieldName_get, _devkit.GlmTrajectory_VectorField__vectorFieldName_set)
    __swig_setmethods__["_angularLimit"] = _devkit.GlmTrajectory_VectorField__angularLimit_set
    __swig_getmethods__["_angularLimit"] = _devkit.GlmTrajectory_VectorField__angularLimit_get
    if _newclass:
        _angularLimit = _swig_property(_devkit.GlmTrajectory_VectorField__angularLimit_get, _devkit.GlmTrajectory_VectorField__angularLimit_set)
    __swig_setmethods__["_angularBoost"] = _devkit.GlmTrajectory_VectorField__angularBoost_set
    __swig_getmethods__["_angularBoost"] = _devkit.GlmTrajectory_VectorField__angularBoost_get
    if _newclass:
        _angularBoost = _swig_property(_devkit.GlmTrajectory_VectorField__angularBoost_get, _devkit.GlmTrajectory_VectorField__angularBoost_set)
    __swig_setmethods__["_referenceFrame"] = _devkit.GlmTrajectory_VectorField__referenceFrame_set
    __swig_getmethods__["_referenceFrame"] = _devkit.GlmTrajectory_VectorField__referenceFrame_get
    if _newclass:
        _referenceFrame = _swig_property(_devkit.GlmTrajectory_VectorField__referenceFrame_get, _devkit.GlmTrajectory_VectorField__referenceFrame_set)

    def __init__(self):
        this = _devkit.new_GlmTrajectory_VectorField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _devkit.delete_GlmTrajectory_VectorField
    __del__ = lambda self: None
GlmTrajectory_VectorField_swigregister = _devkit.GlmTrajectory_VectorField_swigregister
GlmTrajectory_VectorField_swigregister(GlmTrajectory_VectorField)

class GlmTrajectory_Avoidance(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, GlmTrajectory_Avoidance, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, GlmTrajectory_Avoidance, name)
    __repr__ = _swig_repr
    __swig_setmethods__["_frontDistance"] = _devkit.GlmTrajectory_Avoidance__frontDistance_set
    __swig_getmethods__["_frontDistance"] = _devkit.GlmTrajectory_Avoidance__frontDistance_get
    if _newclass:
        _frontDistance = _swig_property(_devkit.GlmTrajectory_Avoidance__frontDistance_get, _devkit.GlmTrajectory_Avoidance__frontDistance_set)
    __swig_setmethods__["_sideDistance"] = _devkit.GlmTrajectory_Avoidance__sideDistance_set
    __swig_getmethods__["_sideDistance"] = _devkit.GlmTrajectory_Avoidance__sideDistance_get
    if _newclass:
        _sideDistance = _swig_property(_devkit.GlmTrajectory_Avoidance__sideDistance_get, _devkit.GlmTrajectory_Avoidance__sideDistance_set)
    __swig_setmethods__["_iterationCount"] = _devkit.GlmTrajectory_Avoidance__iterationCount_set
    __swig_getmethods__["_iterationCount"] = _devkit.GlmTrajectory_Avoidance__iterationCount_get
    if _newclass:
        _iterationCount = _swig_property(_devkit.GlmTrajectory_Avoidance__iterationCount_get, _devkit.GlmTrajectory_Avoidance__iterationCount_set)
    __swig_setmethods__["_iterationStrength"] = _devkit.GlmTrajectory_Avoidance__iterationStrength_set
    __swig_getmethods__["_iterationStrength"] = _devkit.GlmTrajectory_Avoidance__iterationStrength_get
    if _newclass:
        _iterationStrength = _swig_property(_devkit.GlmTrajectory_Avoidance__iterationStrength_get, _devkit.GlmTrajectory_Avoidance__iterationStrength_set)

    def __init__(self):
        this = _devkit.new_GlmTrajectory_Avoidance()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _devkit.delete_GlmTrajectory_Avoidance
    __del__ = lambda self: None
GlmTrajectory_Avoidance_swigregister = _devkit.GlmTrajectory_Avoidance_swigregister
GlmTrajectory_Avoidance_swigregister(GlmTrajectory_Avoidance)

class GlmTrajectory_CurveEdit(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, GlmTrajectory_CurveEdit, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, GlmTrajectory_CurveEdit, name)
    __repr__ = _swig_repr
    __swig_setmethods__["_steps"] = _devkit.GlmTrajectory_CurveEdit__steps_set
    __swig_getmethods__["_steps"] = _devkit.GlmTrajectory_CurveEdit__steps_get
    if _newclass:
        _steps = _swig_property(_devkit.GlmTrajectory_CurveEdit__steps_get, _devkit.GlmTrajectory_CurveEdit__steps_set)

    def __init__(self):
        this = _devkit.new_GlmTrajectory_CurveEdit()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _devkit.delete_GlmTrajectory_CurveEdit
    __del__ = lambda self: None
GlmTrajectory_CurveEdit_swigregister = _devkit.GlmTrajectory_CurveEdit_swigregister
GlmTrajectory_CurveEdit_swigregister(GlmTrajectory_CurveEdit)

class GlmTrajectory_Mode(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, GlmTrajectory_Mode, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, GlmTrajectory_Mode, name)
    __repr__ = _swig_repr
    __swig_setmethods__["_mode"] = _devkit.GlmTrajectory_Mode__mode_set
    __swig_getmethods__["_mode"] = _devkit.GlmTrajectory_Mode__mode_get
    if _newclass:
        _mode = _swig_property(_devkit.GlmTrajectory_Mode__mode_get, _devkit.GlmTrajectory_Mode__mode_set)

    def __init__(self):
        this = _devkit.new_GlmTrajectory_Mode()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _devkit.delete_GlmTrajectory_Mode
    __del__ = lambda self: None
GlmTrajectory_Mode_swigregister = _devkit.GlmTrajectory_Mode_swigregister
GlmTrajectory_Mode_swigregister(GlmTrajectory_Mode)

GSC_SUCCESS = _devkit.GSC_SUCCESS
GSC_UNKNOWN_ERROR = _devkit.GSC_UNKNOWN_ERROR
GSC_OPENING = _devkit.GSC_OPENING
GSC_FILE_OPEN_FAILED = _devkit.GSC_FILE_OPEN_FAILED
GSC_FILE_MAGIC_NUMBER_ERROR = _devkit.GSC_FILE_MAGIC_NUMBER_ERROR
GSC_FILE_VERSION_ERROR = _devkit.GSC_FILE_VERSION_ERROR
GSC_FILE_FORMAT_ERROR = _devkit.GSC_FILE_FORMAT_ERROR
GSC_SIMULATION_FILE_DOES_NOT_MATCH = _devkit.GSC_SIMULATION_FILE_DOES_NOT_MATCH
GSC_SIMULATION_FRAME_NOT_IN_CACHE = _devkit.GSC_SIMULATION_FRAME_NOT_IN_CACHE
GSC_SIMULATION_NO_FRAMES_FOUND = _devkit.GSC_SIMULATION_NO_FRAMES_FOUND
GSC_FILE_POSITION_OUT_OF_MAX_BONECHAIN_LENGTH = _devkit.GSC_FILE_POSITION_OUT_OF_MAX_BONECHAIN_LENGTH
GSC_END = _devkit.GSC_END

def glmConvertSimulationCacheStatus(status):
    return _devkit.glmConvertSimulationCacheStatus(status)
glmConvertSimulationCacheStatus = _devkit.glmConvertSimulationCacheStatus

def glmsprintf(str, strSize, format):
    return _devkit.glmsprintf(str, strSize, format)
glmsprintf = _devkit.glmsprintf

def interpolateNFloats(value1, value2, ratio, res, count):
    return _devkit.interpolateNFloats(value1, value2, ratio, res, count)
interpolateNFloats = _devkit.interpolateNFloats

def glmComputeValidFrameIndex(cacheFileDir, cacheName, crowdFieldName, frameIndex):
    return _devkit.glmComputeValidFrameIndex(cacheFileDir, cacheName, crowdFieldName, frameIndex)
glmComputeValidFrameIndex = _devkit.glmComputeValidFrameIndex

def glmComputeLengthOnTrajectory(points, stride, pointCount, frameIndex, fraction):
    return _devkit.glmComputeLengthOnTrajectory(points, stride, pointCount, frameIndex, fraction)
glmComputeLengthOnTrajectory = _devkit.glmComputeLengthOnTrajectory

def glmComputeFrameOffsetFromLength(points, stride, pointCount, lengthOnTrajectory, frameIndex, fraction):
    return _devkit.glmComputeFrameOffsetFromLength(points, stride, pointCount, lengthOnTrajectory, frameIndex, fraction)
glmComputeFrameOffsetFromLength = _devkit.glmComputeFrameOffsetFromLength

def glmFileWrite(data, elementSize, count, fp):
    return _devkit.glmFileWrite(data, elementSize, count, fp)
glmFileWrite = _devkit.glmFileWrite

def glmFileWriteUInt16(data, count, fp):
    return _devkit.glmFileWriteUInt16(data, count, fp)
glmFileWriteUInt16 = _devkit.glmFileWriteUInt16

def glmFileWriteUInt32(data, count, fp):
    return _devkit.glmFileWriteUInt32(data, count, fp)
glmFileWriteUInt32 = _devkit.glmFileWriteUInt32

def glmFileRead(data, elementSize, count, fp):
    return _devkit.glmFileRead(data, elementSize, count, fp)
glmFileRead = _devkit.glmFileRead

def glmFileReadUInt16(data, count, fp):
    return _devkit.glmFileReadUInt16(data, count, fp)
glmFileReadUInt16 = _devkit.glmFileReadUInt16

def glmFileReadUInt32(data, count, fp):
    return _devkit.glmFileReadUInt32(data, count, fp)
glmFileReadUInt32 = _devkit.glmFileReadUInt32

def glmStartHash(currentHashValue):
    return _devkit.glmStartHash(currentHashValue)
glmStartHash = _devkit.glmStartHash

def glmCumulativeHash8(valueToHash, currentHashValue):
    return _devkit.glmCumulativeHash8(valueToHash, currentHashValue)
glmCumulativeHash8 = _devkit.glmCumulativeHash8

def glmCumulativeHash16(valueToHash, currentHashValue):
    return _devkit.glmCumulativeHash16(valueToHash, currentHashValue)
glmCumulativeHash16 = _devkit.glmCumulativeHash16

def glmCumulativeHash32(valueToHash, currentHashValue):
    return _devkit.glmCumulativeHash32(valueToHash, currentHashValue)
glmCumulativeHash32 = _devkit.glmCumulativeHash32
GSC_O128_P96 = _devkit.GSC_O128_P96
GSC_O64_P96 = _devkit.GSC_O64_P96
GSC_O32_P96 = _devkit.GSC_O32_P96
GSC_O128_P48 = _devkit.GSC_O128_P48
GSC_O64_P48 = _devkit.GSC_O64_P48
GSC_O32_P48 = _devkit.GSC_O32_P48
class GlmFrameData_v0(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, GlmFrameData_v0, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, GlmFrameData_v0, name)
    __repr__ = _swig_repr
    __swig_setmethods__["_cacheFormat"] = _devkit.GlmFrameData_v0__cacheFormat_set
    __swig_getmethods__["_cacheFormat"] = _devkit.GlmFrameData_v0__cacheFormat_get
    if _newclass:
        _cacheFormat = _swig_property(_devkit.GlmFrameData_v0__cacheFormat_get, _devkit.GlmFrameData_v0__cacheFormat_set)
    __swig_setmethods__["_simulationContentHashKey"] = _devkit.GlmFrameData_v0__simulationContentHashKey_set
    __swig_getmethods__["_simulationContentHashKey"] = _devkit.GlmFrameData_v0__simulationContentHashKey_get
    if _newclass:
        _simulationContentHashKey = _swig_property(_devkit.GlmFrameData_v0__simulationContentHashKey_get, _devkit.GlmFrameData_v0__simulationContentHashKey_set)
    __swig_setmethods__["_hasSquashAndStretch"] = _devkit.GlmFrameData_v0__hasSquashAndStretch_set
    __swig_getmethods__["_hasSquashAndStretch"] = _devkit.GlmFrameData_v0__hasSquashAndStretch_get
    if _newclass:
        _hasSquashAndStretch = _swig_property(_devkit.GlmFrameData_v0__hasSquashAndStretch_get, _devkit.GlmFrameData_v0__hasSquashAndStretch_set)
    __swig_setmethods__["_entityEnabled"] = _devkit.GlmFrameData_v0__entityEnabled_set
    __swig_getmethods__["_entityEnabled"] = _devkit.GlmFrameData_v0__entityEnabled_get
    if _newclass:
        _entityEnabled = _swig_property(_devkit.GlmFrameData_v0__entityEnabled_get, _devkit.GlmFrameData_v0__entityEnabled_set)
    __swig_setmethods__["_bonePositions"] = _devkit.GlmFrameData_v0__bonePositions_set
    __swig_getmethods__["_bonePositions"] = _devkit.GlmFrameData_v0__bonePositions_get
    if _newclass:
        _bonePositions = _swig_property(_devkit.GlmFrameData_v0__bonePositions_get, _devkit.GlmFrameData_v0__bonePositions_set)
    __swig_setmethods__["_boneOrientations"] = _devkit.GlmFrameData_v0__boneOrientations_set
    __swig_getmethods__["_boneOrientations"] = _devkit.GlmFrameData_v0__boneOrientations_get
    if _newclass:
        _boneOrientations = _swig_property(_devkit.GlmFrameData_v0__boneOrientations_get, _devkit.GlmFrameData_v0__boneOrientations_set)
    __swig_setmethods__["_snsValues"] = _devkit.GlmFrameData_v0__snsValues_set
    __swig_getmethods__["_snsValues"] = _devkit.GlmFrameData_v0__snsValues_get
    if _newclass:
        _snsValues = _swig_property(_devkit.GlmFrameData_v0__snsValues_get, _devkit.GlmFrameData_v0__snsValues_set)
    __swig_setmethods__["_blindData"] = _devkit.GlmFrameData_v0__blindData_set
    __swig_getmethods__["_blindData"] = _devkit.GlmFrameData_v0__blindData_get
    if _newclass:
        _blindData = _swig_property(_devkit.GlmFrameData_v0__blindData_get, _devkit.GlmFrameData_v0__blindData_set)
    __swig_setmethods__["_geoBehaviorGeometryIds"] = _devkit.GlmFrameData_v0__geoBehaviorGeometryIds_set
    __swig_getmethods__["_geoBehaviorGeometryIds"] = _devkit.GlmFrameData_v0__geoBehaviorGeometryIds_get
    if _newclass:
        _geoBehaviorGeometryIds = _swig_property(_devkit.GlmFrameData_v0__geoBehaviorGeometryIds_get, _devkit.GlmFrameData_v0__geoBehaviorGeometryIds_set)
    __swig_setmethods__["_geoBehaviorAnimFrameInfo"] = _devkit.GlmFrameData_v0__geoBehaviorAnimFrameInfo_set
    __swig_getmethods__["_geoBehaviorAnimFrameInfo"] = _devkit.GlmFrameData_v0__geoBehaviorAnimFrameInfo_get
    if _newclass:
        _geoBehaviorAnimFrameInfo = _swig_property(_devkit.GlmFrameData_v0__geoBehaviorAnimFrameInfo_get, _devkit.GlmFrameData_v0__geoBehaviorAnimFrameInfo_set)
    __swig_setmethods__["_geoBehaviorBlendModes"] = _devkit.GlmFrameData_v0__geoBehaviorBlendModes_set
    __swig_getmethods__["_geoBehaviorBlendModes"] = _devkit.GlmFrameData_v0__geoBehaviorBlendModes_get
    if _newclass:
        _geoBehaviorBlendModes = _swig_property(_devkit.GlmFrameData_v0__geoBehaviorBlendModes_get, _devkit.GlmFrameData_v0__geoBehaviorBlendModes_set)
    __swig_setmethods__["_clothAllocatedEntities"] = _devkit.GlmFrameData_v0__clothAllocatedEntities_set
    __swig_getmethods__["_clothAllocatedEntities"] = _devkit.GlmFrameData_v0__clothAllocatedEntities_get
    if _newclass:
        _clothAllocatedEntities = _swig_property(_devkit.GlmFrameData_v0__clothAllocatedEntities_get, _devkit.GlmFrameData_v0__clothAllocatedEntities_set)
    __swig_setmethods__["_clothAllocatedIndices"] = _devkit.GlmFrameData_v0__clothAllocatedIndices_set
    __swig_getmethods__["_clothAllocatedIndices"] = _devkit.GlmFrameData_v0__clothAllocatedIndices_get
    if _newclass:
        _clothAllocatedIndices = _swig_property(_devkit.GlmFrameData_v0__clothAllocatedIndices_get, _devkit.GlmFrameData_v0__clothAllocatedIndices_set)
    __swig_setmethods__["_clothAllocatedVertices"] = _devkit.GlmFrameData_v0__clothAllocatedVertices_set
    __swig_getmethods__["_clothAllocatedVertices"] = _devkit.GlmFrameData_v0__clothAllocatedVertices_get
    if _newclass:
        _clothAllocatedVertices = _swig_property(_devkit.GlmFrameData_v0__clothAllocatedVertices_get, _devkit.GlmFrameData_v0__clothAllocatedVertices_set)
    __swig_setmethods__["_clothEntityCount"] = _devkit.GlmFrameData_v0__clothEntityCount_set
    __swig_getmethods__["_clothEntityCount"] = _devkit.GlmFrameData_v0__clothEntityCount_get
    if _newclass:
        _clothEntityCount = _swig_property(_devkit.GlmFrameData_v0__clothEntityCount_get, _devkit.GlmFrameData_v0__clothEntityCount_set)
    __swig_setmethods__["_clothTotalMeshIndices"] = _devkit.GlmFrameData_v0__clothTotalMeshIndices_set
    __swig_getmethods__["_clothTotalMeshIndices"] = _devkit.GlmFrameData_v0__clothTotalMeshIndices_get
    if _newclass:
        _clothTotalMeshIndices = _swig_property(_devkit.GlmFrameData_v0__clothTotalMeshIndices_get, _devkit.GlmFrameData_v0__clothTotalMeshIndices_set)
    __swig_setmethods__["_clothTotalVertices"] = _devkit.GlmFrameData_v0__clothTotalVertices_set
    __swig_getmethods__["_clothTotalVertices"] = _devkit.GlmFrameData_v0__clothTotalVertices_get
    if _newclass:
        _clothTotalVertices = _swig_property(_devkit.GlmFrameData_v0__clothTotalVertices_get, _devkit.GlmFrameData_v0__clothTotalVertices_set)
    __swig_setmethods__["_entityClothIndex"] = _devkit.GlmFrameData_v0__entityClothIndex_set
    __swig_getmethods__["_entityClothIndex"] = _devkit.GlmFrameData_v0__entityClothIndex_get
    if _newclass:
        _entityClothIndex = _swig_property(_devkit.GlmFrameData_v0__entityClothIndex_get, _devkit.GlmFrameData_v0__entityClothIndex_set)
    __swig_setmethods__["_clothEntityMeshCount"] = _devkit.GlmFrameData_v0__clothEntityMeshCount_set
    __swig_getmethods__["_clothEntityMeshCount"] = _devkit.GlmFrameData_v0__clothEntityMeshCount_get
    if _newclass:
        _clothEntityMeshCount = _swig_property(_devkit.GlmFrameData_v0__clothEntityMeshCount_get, _devkit.GlmFrameData_v0__clothEntityMeshCount_set)
    __swig_setmethods__["_clothEntityFirstAssetMeshIndex"] = _devkit.GlmFrameData_v0__clothEntityFirstAssetMeshIndex_set
    __swig_getmethods__["_clothEntityFirstAssetMeshIndex"] = _devkit.GlmFrameData_v0__clothEntityFirstAssetMeshIndex_get
    if _newclass:
        _clothEntityFirstAssetMeshIndex = _swig_property(_devkit.GlmFrameData_v0__clothEntityFirstAssetMeshIndex_get, _devkit.GlmFrameData_v0__clothEntityFirstAssetMeshIndex_set)
    __swig_setmethods__["_clothEntityFirstMeshVertex"] = _devkit.GlmFrameData_v0__clothEntityFirstMeshVertex_set
    __swig_getmethods__["_clothEntityFirstMeshVertex"] = _devkit.GlmFrameData_v0__clothEntityFirstMeshVertex_get
    if _newclass:
        _clothEntityFirstMeshVertex = _swig_property(_devkit.GlmFrameData_v0__clothEntityFirstMeshVertex_get, _devkit.GlmFrameData_v0__clothEntityFirstMeshVertex_set)
    __swig_setmethods__["_clothEntityQuantizationReference"] = _devkit.GlmFrameData_v0__clothEntityQuantizationReference_set
    __swig_getmethods__["_clothEntityQuantizationReference"] = _devkit.GlmFrameData_v0__clothEntityQuantizationReference_get
    if _newclass:
        _clothEntityQuantizationReference = _swig_property(_devkit.GlmFrameData_v0__clothEntityQuantizationReference_get, _devkit.GlmFrameData_v0__clothEntityQuantizationReference_set)
    __swig_setmethods__["_clothEntityQuantizationMaxExtent"] = _devkit.GlmFrameData_v0__clothEntityQuantizationMaxExtent_set
    __swig_getmethods__["_clothEntityQuantizationMaxExtent"] = _devkit.GlmFrameData_v0__clothEntityQuantizationMaxExtent_get
    if _newclass:
        _clothEntityQuantizationMaxExtent = _swig_property(_devkit.GlmFrameData_v0__clothEntityQuantizationMaxExtent_get, _devkit.GlmFrameData_v0__clothEntityQuantizationMaxExtent_set)
    __swig_setmethods__["_clothMeshIndicesInCharAssets"] = _devkit.GlmFrameData_v0__clothMeshIndicesInCharAssets_set
    __swig_getmethods__["_clothMeshIndicesInCharAssets"] = _devkit.GlmFrameData_v0__clothMeshIndicesInCharAssets_get
    if _newclass:
        _clothMeshIndicesInCharAssets = _swig_property(_devkit.GlmFrameData_v0__clothMeshIndicesInCharAssets_get, _devkit.GlmFrameData_v0__clothMeshIndicesInCharAssets_set)
    __swig_setmethods__["_clothMeshVertexCount"] = _devkit.GlmFrameData_v0__clothMeshVertexCount_set
    __swig_getmethods__["_clothMeshVertexCount"] = _devkit.GlmFrameData_v0__clothMeshVertexCount_get
    if _newclass:
        _clothMeshVertexCount = _swig_property(_devkit.GlmFrameData_v0__clothMeshVertexCount_get, _devkit.GlmFrameData_v0__clothMeshVertexCount_set)
    __swig_setmethods__["_clothVertices"] = _devkit.GlmFrameData_v0__clothVertices_set
    __swig_getmethods__["_clothVertices"] = _devkit.GlmFrameData_v0__clothVertices_get
    if _newclass:
        _clothVertices = _swig_property(_devkit.GlmFrameData_v0__clothVertices_get, _devkit.GlmFrameData_v0__clothVertices_set)
    __swig_setmethods__["_ppFloatAttributeData"] = _devkit.GlmFrameData_v0__ppFloatAttributeData_set
    __swig_getmethods__["_ppFloatAttributeData"] = _devkit.GlmFrameData_v0__ppFloatAttributeData_get
    if _newclass:
        _ppFloatAttributeData = _swig_property(_devkit.GlmFrameData_v0__ppFloatAttributeData_get, _devkit.GlmFrameData_v0__ppFloatAttributeData_set)
    __swig_setmethods__["_ppVectorAttributeData"] = _devkit.GlmFrameData_v0__ppVectorAttributeData_set
    __swig_getmethods__["_ppVectorAttributeData"] = _devkit.GlmFrameData_v0__ppVectorAttributeData_get
    if _newclass:
        _ppVectorAttributeData = _swig_property(_devkit.GlmFrameData_v0__ppVectorAttributeData_get, _devkit.GlmFrameData_v0__ppVectorAttributeData_set)

    def __init__(self):
        this = _devkit.new_GlmFrameData_v0()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _devkit.delete_GlmFrameData_v0
    __del__ = lambda self: None
GlmFrameData_v0_swigregister = _devkit.GlmFrameData_v0_swigregister
GlmFrameData_v0_swigregister(GlmFrameData_v0)

class GlmFrameToLoad(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, GlmFrameToLoad, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, GlmFrameToLoad, name)
    __repr__ = _swig_repr
    __swig_setmethods__["_frameIndex"] = _devkit.GlmFrameToLoad__frameIndex_set
    __swig_getmethods__["_frameIndex"] = _devkit.GlmFrameToLoad__frameIndex_get
    if _newclass:
        _frameIndex = _swig_property(_devkit.GlmFrameToLoad__frameIndex_get, _devkit.GlmFrameToLoad__frameIndex_set)
    __swig_setmethods__["_frame"] = _devkit.GlmFrameToLoad__frame_set
    __swig_getmethods__["_frame"] = _devkit.GlmFrameToLoad__frame_get
    if _newclass:
        _frame = _swig_property(_devkit.GlmFrameToLoad__frame_get, _devkit.GlmFrameToLoad__frame_set)

    def __init__(self):
        this = _devkit.new_GlmFrameToLoad()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _devkit.delete_GlmFrameToLoad
    __del__ = lambda self: None
GlmFrameToLoad_swigregister = _devkit.GlmFrameToLoad_swigregister
GlmFrameToLoad_swigregister(GlmFrameToLoad)


def voidEntityFrameData(frameDataOut, simuDataIn, simuDataOut, sourceIndexInCrowdField, destIndexInCrowdField, geoBeDestination):
    return _devkit.voidEntityFrameData(frameDataOut, simuDataIn, simuDataOut, sourceIndexInCrowdField, destIndexInCrowdField, geoBeDestination)
voidEntityFrameData = _devkit.voidEntityFrameData

def computeFrameDataSize(frameData, simulationData):
    return _devkit.computeFrameDataSize(frameData, simulationData)
computeFrameDataSize = _devkit.computeFrameDataSize

def createClothData(simuData, frameData, clothEntityCount, clothIndices, clothVertices):
    return _devkit.createClothData(simuData, frameData, clothEntityCount, clothIndices, clothVertices)
createClothData = _devkit.createClothData

def checkQuantization(simData, frameData, failedEntityId):
    return _devkit.checkQuantization(simData, frameData, failedEntityId)
checkQuantization = _devkit.checkQuantization

def copyEntityFrameData(frameDataIn, frameDataOut, simuDataIn, simuDataOut, sourceIndexInCrowdField, destIndexInCrowdField, geoBeSource, geoBeDestination):
    return _devkit.copyEntityFrameData(frameDataIn, frameDataOut, simuDataIn, simuDataOut, sourceIndexInCrowdField, destIndexInCrowdField, geoBeSource, geoBeDestination)
copyEntityFrameData = _devkit.copyEntityFrameData

def interpolateEntityFrameData(frameDataIn1, frameDataIn2, fraction, frameDataOut, simuDataIn, simuDataOut, sourceIndexInCrowdField, destIndexInCrowdField, geoBeSource, geoBeDestination):
    return _devkit.interpolateEntityFrameData(frameDataIn1, frameDataIn2, fraction, frameDataOut, simuDataIn, simuDataOut, sourceIndexInCrowdField, destIndexInCrowdField, geoBeSource, geoBeDestination)
interpolateEntityFrameData = _devkit.interpolateEntityFrameData

def interpolateFrameData(simulationData, frameData1, frameData2, ratio, result):
    return _devkit.interpolateFrameData(simulationData, frameData1, frameData2, ratio, result)
interpolateFrameData = _devkit.interpolateFrameData

def translateFrameDataEntity(simulationData, frameData, entityIndexInSimData, translation):
    return _devkit.translateFrameDataEntity(simulationData, frameData, entityIndexInSimData, translation)
translateFrameDataEntity = _devkit.translateFrameDataEntity

def rotateFrameDataEntity(simulationData, frameData, entityIndexInSimData, rotation, pivotPoint):
    return _devkit.rotateFrameDataEntity(simulationData, frameData, entityIndexInSimData, rotation, pivotPoint)
rotateFrameDataEntity = _devkit.rotateFrameDataEntity

def setFrameDataEntityTransforms(simulationData, frameData, entityIndexInSimData, position, orientation):
    return _devkit.setFrameDataEntityTransforms(simulationData, frameData, entityIndexInSimData, position, orientation)
setFrameDataEntityTransforms = _devkit.setFrameDataEntityTransforms

def setFrameDataEntityPosition(simulationData, frameData, entityIndexInSimData, position):
    return _devkit.setFrameDataEntityPosition(simulationData, frameData, entityIndexInSimData, position)
setFrameDataEntityPosition = _devkit.setFrameDataEntityPosition

def setFrameDataEntityOrientation(simulationData, frameData, entityIndexInSimData, orientation):
    return _devkit.setFrameDataEntityOrientation(simulationData, frameData, entityIndexInSimData, orientation)
setFrameDataEntityOrientation = _devkit.setFrameDataEntityOrientation

def getClothEntityMeshCount(frameData, clothEntityIndex):
    return _devkit.getClothEntityMeshCount(frameData, clothEntityIndex)
getClothEntityMeshCount = _devkit.getClothEntityMeshCount

def getClothEntityIMeshVertexCount(frameData, clothEntityIndex, iMesh):
    return _devkit.getClothEntityIMeshVertexCount(frameData, clothEntityIndex, iMesh)
getClothEntityIMeshVertexCount = _devkit.getClothEntityIMeshVertexCount

def getClothEntityIMeshVerticesPtr(frameData, clothEntityIndex, iMesh, outFirstVertexPtr):
    return _devkit.getClothEntityIMeshVerticesPtr(frameData, clothEntityIndex, iMesh, outFirstVertexPtr)
getClothEntityIMeshVerticesPtr = _devkit.getClothEntityIMeshVerticesPtr

def setGeometryFileIndexEntity(simulationData, frameData, entityIndexInSimData, geometryFileIndex):
    return _devkit.setGeometryFileIndexEntity(simulationData, frameData, entityIndexInSimData, geometryFileIndex)
setGeometryFileIndexEntity = _devkit.setGeometryFileIndexEntity
class GlmFurSkinVertexData_v0(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, GlmFurSkinVertexData_v0, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, GlmFurSkinVertexData_v0, name)
    __repr__ = _swig_repr
    __swig_setmethods__["_blendWeight"] = _devkit.GlmFurSkinVertexData_v0__blendWeight_set
    __swig_getmethods__["_blendWeight"] = _devkit.GlmFurSkinVertexData_v0__blendWeight_get
    if _newclass:
        _blendWeight = _swig_property(_devkit.GlmFurSkinVertexData_v0__blendWeight_get, _devkit.GlmFurSkinVertexData_v0__blendWeight_set)
    __swig_setmethods__["_skinInfluenceCount"] = _devkit.GlmFurSkinVertexData_v0__skinInfluenceCount_set
    __swig_getmethods__["_skinInfluenceCount"] = _devkit.GlmFurSkinVertexData_v0__skinInfluenceCount_get
    if _newclass:
        _skinInfluenceCount = _swig_property(_devkit.GlmFurSkinVertexData_v0__skinInfluenceCount_get, _devkit.GlmFurSkinVertexData_v0__skinInfluenceCount_set)
    __swig_setmethods__["_skinInfluenceWeights"] = _devkit.GlmFurSkinVertexData_v0__skinInfluenceWeights_set
    __swig_getmethods__["_skinInfluenceWeights"] = _devkit.GlmFurSkinVertexData_v0__skinInfluenceWeights_get
    if _newclass:
        _skinInfluenceWeights = _swig_property(_devkit.GlmFurSkinVertexData_v0__skinInfluenceWeights_get, _devkit.GlmFurSkinVertexData_v0__skinInfluenceWeights_set)
    __swig_setmethods__["_skinInfluenceBoneIds"] = _devkit.GlmFurSkinVertexData_v0__skinInfluenceBoneIds_set
    __swig_getmethods__["_skinInfluenceBoneIds"] = _devkit.GlmFurSkinVertexData_v0__skinInfluenceBoneIds_get
    if _newclass:
        _skinInfluenceBoneIds = _swig_property(_devkit.GlmFurSkinVertexData_v0__skinInfluenceBoneIds_get, _devkit.GlmFurSkinVertexData_v0__skinInfluenceBoneIds_set)

    def __init__(self):
        this = _devkit.new_GlmFurSkinVertexData_v0()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _devkit.delete_GlmFurSkinVertexData_v0
    __del__ = lambda self: None
GlmFurSkinVertexData_v0_swigregister = _devkit.GlmFurSkinVertexData_v0_swigregister
GlmFurSkinVertexData_v0_swigregister(GlmFurSkinVertexData_v0)

class GlmFurCurveGroupData_v0(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, GlmFurCurveGroupData_v0, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, GlmFurCurveGroupData_v0, name)
    __repr__ = _swig_repr
    __swig_setmethods__["_curveCount"] = _devkit.GlmFurCurveGroupData_v0__curveCount_set
    __swig_getmethods__["_curveCount"] = _devkit.GlmFurCurveGroupData_v0__curveCount_get
    if _newclass:
        _curveCount = _swig_property(_devkit.GlmFurCurveGroupData_v0__curveCount_get, _devkit.GlmFurCurveGroupData_v0__curveCount_set)
    __swig_setmethods__["_vertCount"] = _devkit.GlmFurCurveGroupData_v0__vertCount_set
    __swig_getmethods__["_vertCount"] = _devkit.GlmFurCurveGroupData_v0__vertCount_get
    if _newclass:
        _vertCount = _swig_property(_devkit.GlmFurCurveGroupData_v0__vertCount_get, _devkit.GlmFurCurveGroupData_v0__vertCount_set)
    __swig_setmethods__["_numVertices"] = _devkit.GlmFurCurveGroupData_v0__numVertices_set
    __swig_getmethods__["_numVertices"] = _devkit.GlmFurCurveGroupData_v0__numVertices_get
    if _newclass:
        _numVertices = _swig_property(_devkit.GlmFurCurveGroupData_v0__numVertices_get, _devkit.GlmFurCurveGroupData_v0__numVertices_set)
    __swig_setmethods__["_iCurveOffset"] = _devkit.GlmFurCurveGroupData_v0__iCurveOffset_set
    __swig_getmethods__["_iCurveOffset"] = _devkit.GlmFurCurveGroupData_v0__iCurveOffset_get
    if _newclass:
        _iCurveOffset = _swig_property(_devkit.GlmFurCurveGroupData_v0__iCurveOffset_get, _devkit.GlmFurCurveGroupData_v0__iCurveOffset_set)
    __swig_setmethods__["_positions"] = _devkit.GlmFurCurveGroupData_v0__positions_set
    __swig_getmethods__["_positions"] = _devkit.GlmFurCurveGroupData_v0__positions_get
    if _newclass:
        _positions = _swig_property(_devkit.GlmFurCurveGroupData_v0__positions_get, _devkit.GlmFurCurveGroupData_v0__positions_set)
    __swig_setmethods__["_widths"] = _devkit.GlmFurCurveGroupData_v0__widths_set
    __swig_getmethods__["_widths"] = _devkit.GlmFurCurveGroupData_v0__widths_get
    if _newclass:
        _widths = _swig_property(_devkit.GlmFurCurveGroupData_v0__widths_get, _devkit.GlmFurCurveGroupData_v0__widths_set)
    __swig_setmethods__["_uvs"] = _devkit.GlmFurCurveGroupData_v0__uvs_set
    __swig_getmethods__["_uvs"] = _devkit.GlmFurCurveGroupData_v0__uvs_get
    if _newclass:
        _uvs = _swig_property(_devkit.GlmFurCurveGroupData_v0__uvs_get, _devkit.GlmFurCurveGroupData_v0__uvs_set)
    __swig_setmethods__["_supportMeshId"] = _devkit.GlmFurCurveGroupData_v0__supportMeshId_set
    __swig_getmethods__["_supportMeshId"] = _devkit.GlmFurCurveGroupData_v0__supportMeshId_get
    if _newclass:
        _supportMeshId = _swig_property(_devkit.GlmFurCurveGroupData_v0__supportMeshId_get, _devkit.GlmFurCurveGroupData_v0__supportMeshId_set)
    __swig_setmethods__["_triVtxIds"] = _devkit.GlmFurCurveGroupData_v0__triVtxIds_set
    __swig_getmethods__["_triVtxIds"] = _devkit.GlmFurCurveGroupData_v0__triVtxIds_get
    if _newclass:
        _triVtxIds = _swig_property(_devkit.GlmFurCurveGroupData_v0__triVtxIds_get, _devkit.GlmFurCurveGroupData_v0__triVtxIds_set)
    __swig_setmethods__["_tetraBaryCoords"] = _devkit.GlmFurCurveGroupData_v0__tetraBaryCoords_set
    __swig_getmethods__["_tetraBaryCoords"] = _devkit.GlmFurCurveGroupData_v0__tetraBaryCoords_get
    if _newclass:
        _tetraBaryCoords = _swig_property(_devkit.GlmFurCurveGroupData_v0__tetraBaryCoords_get, _devkit.GlmFurCurveGroupData_v0__tetraBaryCoords_set)
    __swig_setmethods__["_curveDegrees"] = _devkit.GlmFurCurveGroupData_v0__curveDegrees_set
    __swig_getmethods__["_curveDegrees"] = _devkit.GlmFurCurveGroupData_v0__curveDegrees_get
    if _newclass:
        _curveDegrees = _swig_property(_devkit.GlmFurCurveGroupData_v0__curveDegrees_get, _devkit.GlmFurCurveGroupData_v0__curveDegrees_set)
    __swig_setmethods__["_hasSkinningType"] = _devkit.GlmFurCurveGroupData_v0__hasSkinningType_set
    __swig_getmethods__["_hasSkinningType"] = _devkit.GlmFurCurveGroupData_v0__hasSkinningType_get
    if _newclass:
        _hasSkinningType = _swig_property(_devkit.GlmFurCurveGroupData_v0__hasSkinningType_get, _devkit.GlmFurCurveGroupData_v0__hasSkinningType_set)
    __swig_setmethods__["_skinningType"] = _devkit.GlmFurCurveGroupData_v0__skinningType_set
    __swig_getmethods__["_skinningType"] = _devkit.GlmFurCurveGroupData_v0__skinningType_get
    if _newclass:
        _skinningType = _swig_property(_devkit.GlmFurCurveGroupData_v0__skinningType_get, _devkit.GlmFurCurveGroupData_v0__skinningType_set)
    __swig_setmethods__["_hasSkinningInfo"] = _devkit.GlmFurCurveGroupData_v0__hasSkinningInfo_set
    __swig_getmethods__["_hasSkinningInfo"] = _devkit.GlmFurCurveGroupData_v0__hasSkinningInfo_get
    if _newclass:
        _hasSkinningInfo = _swig_property(_devkit.GlmFurCurveGroupData_v0__hasSkinningInfo_get, _devkit.GlmFurCurveGroupData_v0__hasSkinningInfo_set)
    __swig_setmethods__["_skinningInfo"] = _devkit.GlmFurCurveGroupData_v0__skinningInfo_set
    __swig_getmethods__["_skinningInfo"] = _devkit.GlmFurCurveGroupData_v0__skinningInfo_get
    if _newclass:
        _skinningInfo = _swig_property(_devkit.GlmFurCurveGroupData_v0__skinningInfo_get, _devkit.GlmFurCurveGroupData_v0__skinningInfo_set)

    def __init__(self):
        this = _devkit.new_GlmFurCurveGroupData_v0()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _devkit.delete_GlmFurCurveGroupData_v0
    __del__ = lambda self: None
GlmFurCurveGroupData_v0_swigregister = _devkit.GlmFurCurveGroupData_v0_swigregister
GlmFurCurveGroupData_v0_swigregister(GlmFurCurveGroupData_v0)

class GlmFurData_v0(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, GlmFurData_v0, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, GlmFurData_v0, name)
    __repr__ = _swig_repr
    __swig_setmethods__["_curveGroupsCount"] = _devkit.GlmFurData_v0__curveGroupsCount_set
    __swig_getmethods__["_curveGroupsCount"] = _devkit.GlmFurData_v0__curveGroupsCount_get
    if _newclass:
        _curveGroupsCount = _swig_property(_devkit.GlmFurData_v0__curveGroupsCount_get, _devkit.GlmFurData_v0__curveGroupsCount_set)
    __swig_setmethods__["_curveGroups"] = _devkit.GlmFurData_v0__curveGroups_set
    __swig_getmethods__["_curveGroups"] = _devkit.GlmFurData_v0__curveGroups_get
    if _newclass:
        _curveGroups = _swig_property(_devkit.GlmFurData_v0__curveGroups_get, _devkit.GlmFurData_v0__curveGroups_set)

    def getCurveGroup(self, _curveGroupsIdx):
        return _devkit.GlmFurData_v0_getCurveGroup(self, _curveGroupsIdx)

    def __init__(self):
        this = _devkit.new_GlmFurData_v0()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _devkit.delete_GlmFurData_v0
    __del__ = lambda self: None
GlmFurData_v0_swigregister = _devkit.GlmFurData_v0_swigregister
GlmFurData_v0_swigregister(GlmFurData_v0)


def writeFurData(file, furData):
    return _devkit.writeFurData(file, furData)
writeFurData = _devkit.writeFurData

def setFurWidths(furData, baseWidth, tipWidth):
    return _devkit.setFurWidths(furData, baseWidth, tipWidth)
setFurWidths = _devkit.setFurWidths

def freeCharArray(datatoFree):
    return _devkit.freeCharArray(datatoFree)
freeCharArray = _devkit.freeCharArray

def createAndReadSimulationData(file):
    return _devkit.createAndReadSimulationData(file)
createAndReadSimulationData = _devkit.createAndReadSimulationData

def writeSimulationData(file, simulationData):
    return _devkit.writeSimulationData(file, simulationData)
writeSimulationData = _devkit.writeSimulationData

def destroySimulationData(simulationData):
    return _devkit.destroySimulationData(simulationData)
destroySimulationData = _devkit.destroySimulationData

def createFrameData(simulationData):
    return _devkit.createFrameData(simulationData)
createFrameData = _devkit.createFrameData

def readFrameData(frameData, simulationData, file):
    return _devkit.readFrameData(frameData, simulationData, file)
readFrameData = _devkit.readFrameData

def createAndCopyFrameData(src, simulationData):
    return _devkit.createAndCopyFrameData(src, simulationData)
createAndCopyFrameData = _devkit.createAndCopyFrameData

def writeFrameData(file, frameData, simulationData):
    return _devkit.writeFrameData(file, frameData, simulationData)
writeFrameData = _devkit.writeFrameData

def destroyFrameData(frameData, simulationData):
    return _devkit.destroyFrameData(frameData, simulationData)
destroyFrameData = _devkit.destroyFrameData

def getBonePositions(frameData):
    return _devkit.getBonePositions(frameData)
getBonePositions = _devkit.getBonePositions

def getBoneOrientations(frameData):
    return _devkit.getBoneOrientations(frameData)
getBoneOrientations = _devkit.getBoneOrientations

def getSnsValues(frameData):
    return _devkit.getSnsValues(frameData)
getSnsValues = _devkit.getSnsValues

def getGeoBehaviorAnimFrameInfo(frameData):
    return _devkit.getGeoBehaviorAnimFrameInfo(frameData)
getGeoBehaviorAnimFrameInfo = _devkit.getGeoBehaviorAnimFrameInfo

def getPPFloatAttributeName(simulationData, attributeIdx):
    return _devkit.getPPFloatAttributeName(simulationData, attributeIdx)
getPPFloatAttributeName = _devkit.getPPFloatAttributeName

def getPPVectorAttributeName(simulationData, attributeIdx):
    return _devkit.getPPVectorAttributeName(simulationData, attributeIdx)
getPPVectorAttributeName = _devkit.getPPVectorAttributeName

def getPPFloatAttributeData(frameData, attributeIdx):
    return _devkit.getPPFloatAttributeData(frameData, attributeIdx)
getPPFloatAttributeData = _devkit.getPPFloatAttributeData

def getPPVectorAttributeData(frameData, attributeIdx):
    return _devkit.getPPVectorAttributeData(frameData, attributeIdx)
getPPVectorAttributeData = _devkit.getPPVectorAttributeData

def getBoneNames(characterFile):
    return _devkit.getBoneNames(characterFile)
getBoneNames = _devkit.getBoneNames

def getParentBones(characterFile):
    return _devkit.getParentBones(characterFile)
getParentBones = _devkit.getParentBones

def getSortedBones(characterFile):
    return _devkit.getSortedBones(characterFile)
getSortedBones = _devkit.getSortedBones

def getShadingGroupNames(characterFile):
    return _devkit.getShadingGroupNames(characterFile)
getShadingGroupNames = _devkit.getShadingGroupNames

def getShaderAssetNames(characterFile):
    return _devkit.getShaderAssetNames(characterFile)
getShaderAssetNames = _devkit.getShaderAssetNames

def createAndReadFurData(file):
    return _devkit.createAndReadFurData(file)
createAndReadFurData = _devkit.createAndReadFurData

def destroyFurData(furData):
    return _devkit.destroyFurData(furData)
destroyFurData = _devkit.destroyFurData

def initSimulationCacheFactory():
    return _devkit.initSimulationCacheFactory()
initSimulationCacheFactory = _devkit.initSimulationCacheFactory

def finishSimulationCacheFactory():
    return _devkit.finishSimulationCacheFactory()
finishSimulationCacheFactory = _devkit.finishSimulationCacheFactory

def loadSimulationCacheFactoryCharacters(characterFiles):
    return _devkit.loadSimulationCacheFactoryCharacters(characterFiles)
loadSimulationCacheFactoryCharacters = _devkit.loadSimulationCacheFactoryCharacters

def loadSimulationCacheFactoryTerrain(*args):
    return _devkit.loadSimulationCacheFactoryTerrain(*args)
loadSimulationCacheFactoryTerrain = _devkit.loadSimulationCacheFactoryTerrain

def loadSimulationCacheFactoryLayoutFiles(layoutFiles):
    return _devkit.loadSimulationCacheFactoryLayoutFiles(layoutFiles)
loadSimulationCacheFactoryLayoutFiles = _devkit.loadSimulationCacheFactoryLayoutFiles

def getCachedSimulationIndex(cacheFileDir, cacheName, simulationName):
    return _devkit.getCachedSimulationIndex(cacheFileDir, cacheName, simulationName)
getCachedSimulationIndex = _devkit.getCachedSimulationIndex

def getFinalSimulationData(cachedSimulationIndex):
    return _devkit.getFinalSimulationData(cachedSimulationIndex)
getFinalSimulationData = _devkit.getFinalSimulationData

def getFinalFrameData(cachedSimulationIndex, frameValue, interpolateBetweenFrames=True):
    return _devkit.getFinalFrameData(cachedSimulationIndex, frameValue, interpolateBetweenFrames)
getFinalFrameData = _devkit.getFinalFrameData

def getSrcSimulationData(cachedSimulationIndex):
    return _devkit.getSrcSimulationData(cachedSimulationIndex)
getSrcSimulationData = _devkit.getSrcSimulationData

def getSrcFrameData(cachedSimulationIndex, frameValue, interpolateBetweenFrames=True):
    return _devkit.getSrcFrameData(cachedSimulationIndex, frameValue, interpolateBetweenFrames)
getSrcFrameData = _devkit.getSrcFrameData

def getEntityBoneCount(entityIndex, simulationData):
    return _devkit.getEntityBoneCount(entityIndex, simulationData)
getEntityBoneCount = _devkit.getEntityBoneCount

def getEntityBoneOffsetIndex(entityIndex, simulationData):
    return _devkit.getEntityBoneOffsetIndex(entityIndex, simulationData)
getEntityBoneOffsetIndex = _devkit.getEntityBoneOffsetIndex

def asFloatPointer(*args):
    return _devkit.asFloatPointer(*args)
asFloatPointer = _devkit.asFloatPointer

def initGolaemProduct(productName, demoLicDir):
    return _devkit.initGolaemProduct(productName, demoLicDir)
initGolaemProduct = _devkit.initGolaemProduct

def finishGolaemProduct():
    return _devkit.finishGolaemProduct()
finishGolaemProduct = _devkit.finishGolaemProduct

def initGolaem():
    return _devkit.initGolaem()
initGolaem = _devkit.initGolaem

def finishGolaem():
    return _devkit.finishGolaem()
finishGolaem = _devkit.finishGolaem

def usingGolaemPLELicense():
    return _devkit.usingGolaemPLELicense()
usingGolaemPLELicense = _devkit.usingGolaemPLELicense

def usingGolaemFullLicense():
    return _devkit.usingGolaemFullLicense()
usingGolaemFullLicense = _devkit.usingGolaemFullLicense

def usingGolaemLayoutLicense():
    return _devkit.usingGolaemLayoutLicense()
usingGolaemLayoutLicense = _devkit.usingGolaemLayoutLicense

def usingGolaemLiteLicense():
    return _devkit.usingGolaemLiteLicense()
usingGolaemLiteLicense = _devkit.usingGolaemLiteLicense

def getGolaemLicenseString():
    return _devkit.getGolaemLicenseString()
getGolaemLicenseString = _devkit.getGolaemLicenseString

def getGolaemVersionString():
    return _devkit.getGolaemVersionString()
getGolaemVersionString = _devkit.getGolaemVersionString

def openGolaemLayout(jsonFilePath):
    return _devkit.openGolaemLayout(jsonFilePath)
openGolaemLayout = _devkit.openGolaemLayout

def createGolaemLayout():
    return _devkit.createGolaemLayout()
createGolaemLayout = _devkit.createGolaemLayout

def saveGolaemLayout(jsonFilePath, jsonContent):
    return _devkit.saveGolaemLayout(jsonFilePath, jsonContent)
saveGolaemLayout = _devkit.saveGolaemLayout

def replaceEnvVars(sourcePath):
    return _devkit.replaceEnvVars(sourcePath)
replaceEnvVars = _devkit.replaceEnvVars

def initGda():
    return _devkit.initGda()
initGda = _devkit.initGda

def finishGda():
    return _devkit.finishGda()
finishGda = _devkit.finishGda

def GDAGetNodeTypeId(nodeTypeName):
    return _devkit.GDAGetNodeTypeId(nodeTypeName)
GDAGetNodeTypeId = _devkit.GDAGetNodeTypeId

def GDAGetNodeTypeName(nodeType):
    return _devkit.GDAGetNodeTypeName(nodeType)
GDAGetNodeTypeName = _devkit.GDAGetNodeTypeName

def GDAGetAttributeTypeId(attributeTypeName):
    return _devkit.GDAGetAttributeTypeId(attributeTypeName)
GDAGetAttributeTypeId = _devkit.GDAGetAttributeTypeId

def GDAGetAttributeTypeName(attributeType):
    return _devkit.GDAGetAttributeTypeName(attributeType)
GDAGetAttributeTypeName = _devkit.GDAGetAttributeTypeName

def GDAAttributeCreate(name, type, dimension=0, sizes=None):
    return _devkit.GDAAttributeCreate(name, type, dimension, sizes)
GDAAttributeCreate = _devkit.GDAAttributeCreate

def GDAAttributeResize(attributeId, dimension, sizes):
    return _devkit.GDAAttributeResize(attributeId, dimension, sizes)
GDAAttributeResize = _devkit.GDAAttributeResize

def GDAAttributeSetInt32Value(attributeId, value, indexes=None):
    return _devkit.GDAAttributeSetInt32Value(attributeId, value, indexes)
GDAAttributeSetInt32Value = _devkit.GDAAttributeSetInt32Value

def GDAAttributeSetInt64Value(attributeId, value, indexes=None):
    return _devkit.GDAAttributeSetInt64Value(attributeId, value, indexes)
GDAAttributeSetInt64Value = _devkit.GDAAttributeSetInt64Value

def GDAAttributeSetUint32Value(attributeId, value, indexes=None):
    return _devkit.GDAAttributeSetUint32Value(attributeId, value, indexes)
GDAAttributeSetUint32Value = _devkit.GDAAttributeSetUint32Value

def GDAAttributeSetUint64Value(attributeId, value, indexes=None):
    return _devkit.GDAAttributeSetUint64Value(attributeId, value, indexes)
GDAAttributeSetUint64Value = _devkit.GDAAttributeSetUint64Value

def GDAAttributeSetFloatValue(attributeId, value, indexes=None):
    return _devkit.GDAAttributeSetFloatValue(attributeId, value, indexes)
GDAAttributeSetFloatValue = _devkit.GDAAttributeSetFloatValue

def GDAAttributeSetVec3Value(attributeId, value, indexes=None):
    return _devkit.GDAAttributeSetVec3Value(attributeId, value, indexes)
GDAAttributeSetVec3Value = _devkit.GDAAttributeSetVec3Value

def GDAAttributeSetVec4Value(attributeId, value, indexes=None):
    return _devkit.GDAAttributeSetVec4Value(attributeId, value, indexes)
GDAAttributeSetVec4Value = _devkit.GDAAttributeSetVec4Value

def GDAAttributeSetStringValue(attributeId, value, indexes=None):
    return _devkit.GDAAttributeSetStringValue(attributeId, value, indexes)
GDAAttributeSetStringValue = _devkit.GDAAttributeSetStringValue

def GDAAttributeSetInt32ArrayValue(attributeId, value, count, indexes=None):
    return _devkit.GDAAttributeSetInt32ArrayValue(attributeId, value, count, indexes)
GDAAttributeSetInt32ArrayValue = _devkit.GDAAttributeSetInt32ArrayValue

def GDAAttributeSetInt64ArrayValue(attributeId, value, count, indexes=None):
    return _devkit.GDAAttributeSetInt64ArrayValue(attributeId, value, count, indexes)
GDAAttributeSetInt64ArrayValue = _devkit.GDAAttributeSetInt64ArrayValue

def GDAAttributeSetUint32ArrayValue(attributeId, value, count, indexes=None):
    return _devkit.GDAAttributeSetUint32ArrayValue(attributeId, value, count, indexes)
GDAAttributeSetUint32ArrayValue = _devkit.GDAAttributeSetUint32ArrayValue

def GDAAttributeSetUint64ArrayValue(attributeId, value, count, indexes=None):
    return _devkit.GDAAttributeSetUint64ArrayValue(attributeId, value, count, indexes)
GDAAttributeSetUint64ArrayValue = _devkit.GDAAttributeSetUint64ArrayValue

def GDAAttributeSetFloatArrayValue(attributeId, value, count, indexes=None):
    return _devkit.GDAAttributeSetFloatArrayValue(attributeId, value, count, indexes)
GDAAttributeSetFloatArrayValue = _devkit.GDAAttributeSetFloatArrayValue

def GDAAttributeSetVec3ArrayValue(attributeId, value, count, indexes=None):
    return _devkit.GDAAttributeSetVec3ArrayValue(attributeId, value, count, indexes)
GDAAttributeSetVec3ArrayValue = _devkit.GDAAttributeSetVec3ArrayValue

def GDAAttributeSetVec4ArrayValue(attributeId, value, count, indexes=None):
    return _devkit.GDAAttributeSetVec4ArrayValue(attributeId, value, count, indexes)
GDAAttributeSetVec4ArrayValue = _devkit.GDAAttributeSetVec4ArrayValue

def GDAAttributeGetInt32Value(attributeId, indexes=None):
    return _devkit.GDAAttributeGetInt32Value(attributeId, indexes)
GDAAttributeGetInt32Value = _devkit.GDAAttributeGetInt32Value

def GDAAttributeGetInt64Value(attributeId, indexes=None):
    return _devkit.GDAAttributeGetInt64Value(attributeId, indexes)
GDAAttributeGetInt64Value = _devkit.GDAAttributeGetInt64Value

def GDAAttributeGetUint32Value(attributeId, indexes=None):
    return _devkit.GDAAttributeGetUint32Value(attributeId, indexes)
GDAAttributeGetUint32Value = _devkit.GDAAttributeGetUint32Value

def GDAAttributeGetUint64Value(attributeId, indexes=None):
    return _devkit.GDAAttributeGetUint64Value(attributeId, indexes)
GDAAttributeGetUint64Value = _devkit.GDAAttributeGetUint64Value

def GDAAttributeGetFloatValue(attributeId, indexes=None):
    return _devkit.GDAAttributeGetFloatValue(attributeId, indexes)
GDAAttributeGetFloatValue = _devkit.GDAAttributeGetFloatValue

def GDAAttributeGetVec3Value(attributeId, indexes=None):
    return _devkit.GDAAttributeGetVec3Value(attributeId, indexes)
GDAAttributeGetVec3Value = _devkit.GDAAttributeGetVec3Value

def GDAAttributeGetVec4Value(attributeId, indexes=None):
    return _devkit.GDAAttributeGetVec4Value(attributeId, indexes)
GDAAttributeGetVec4Value = _devkit.GDAAttributeGetVec4Value

def GDAAttributeGetStringValue(attributeId, indexes=None):
    return _devkit.GDAAttributeGetStringValue(attributeId, indexes)
GDAAttributeGetStringValue = _devkit.GDAAttributeGetStringValue

def GDAAttributeGetInt32ArrayValue(attributeId, indexes=None):
    return _devkit.GDAAttributeGetInt32ArrayValue(attributeId, indexes)
GDAAttributeGetInt32ArrayValue = _devkit.GDAAttributeGetInt32ArrayValue

def GDAAttributeGetInt64ArrayValue(attributeId, indexes=None):
    return _devkit.GDAAttributeGetInt64ArrayValue(attributeId, indexes)
GDAAttributeGetInt64ArrayValue = _devkit.GDAAttributeGetInt64ArrayValue

def GDAAttributeGetUint32ArrayValue(attributeId, indexes=None):
    return _devkit.GDAAttributeGetUint32ArrayValue(attributeId, indexes)
GDAAttributeGetUint32ArrayValue = _devkit.GDAAttributeGetUint32ArrayValue

def GDAAttributeGetUint64ArrayValue(attributeId, indexes=None):
    return _devkit.GDAAttributeGetUint64ArrayValue(attributeId, indexes)
GDAAttributeGetUint64ArrayValue = _devkit.GDAAttributeGetUint64ArrayValue

def GDAAttributeGetFloatArrayValue(attributeId, indexes=None):
    return _devkit.GDAAttributeGetFloatArrayValue(attributeId, indexes)
GDAAttributeGetFloatArrayValue = _devkit.GDAAttributeGetFloatArrayValue

def GDAAttributeGetVec3ArrayValue(attributeId, indexes=None):
    return _devkit.GDAAttributeGetVec3ArrayValue(attributeId, indexes)
GDAAttributeGetVec3ArrayValue = _devkit.GDAAttributeGetVec3ArrayValue

def GDAAttributeGetVec4ArrayValue(attributeId, indexes=None):
    return _devkit.GDAAttributeGetVec4ArrayValue(attributeId, indexes)
GDAAttributeGetVec4ArrayValue = _devkit.GDAAttributeGetVec4ArrayValue

def GDAAttributeGetArraySize(attributeId, indexes=None):
    return _devkit.GDAAttributeGetArraySize(attributeId, indexes)
GDAAttributeGetArraySize = _devkit.GDAAttributeGetArraySize

def GDAAttributeGetDimension(attributeId):
    return _devkit.GDAAttributeGetDimension(attributeId)
GDAAttributeGetDimension = _devkit.GDAAttributeGetDimension

def GDAAttributeGetSizes(attributeId):
    return _devkit.GDAAttributeGetSizes(attributeId)
GDAAttributeGetSizes = _devkit.GDAAttributeGetSizes

def GDAAttributeGetName(attributeId):
    return _devkit.GDAAttributeGetName(attributeId)
GDAAttributeGetName = _devkit.GDAAttributeGetName

def GDAAttributeGetType(attributeId):
    return _devkit.GDAAttributeGetType(attributeId)
GDAAttributeGetType = _devkit.GDAAttributeGetType

def GDAAttributeGetTypeId(attributeId):
    return _devkit.GDAAttributeGetTypeId(attributeId)
GDAAttributeGetTypeId = _devkit.GDAAttributeGetTypeId

def GDAAttributeGetShortestUniqueName(attributeId):
    return _devkit.GDAAttributeGetShortestUniqueName(attributeId)
GDAAttributeGetShortestUniqueName = _devkit.GDAAttributeGetShortestUniqueName

def GDAAttributeGetNode(attributeId):
    return _devkit.GDAAttributeGetNode(attributeId)
GDAAttributeGetNode = _devkit.GDAAttributeGetNode

def GDAAttributeIsPublic(attributeId):
    return _devkit.GDAAttributeIsPublic(attributeId)
GDAAttributeIsPublic = _devkit.GDAAttributeIsPublic

def GDAAttributeSetPublic(attributeId, value):
    return _devkit.GDAAttributeSetPublic(attributeId, value)
GDAAttributeSetPublic = _devkit.GDAAttributeSetPublic

def GDAAttributeGetDataType(attributeId):
    return _devkit.GDAAttributeGetDataType(attributeId)
GDAAttributeGetDataType = _devkit.GDAAttributeGetDataType

def GDAAttributeGetDataTypeId(attributeId):
    return _devkit.GDAAttributeGetDataTypeId(attributeId)
GDAAttributeGetDataTypeId = _devkit.GDAAttributeGetDataTypeId

def GDAAttributeSetDataType(attributeId, dataType):
    return _devkit.GDAAttributeSetDataType(attributeId, dataType)
GDAAttributeSetDataType = _devkit.GDAAttributeSetDataType

def GDAAttributeSetDataTypeId(attributeId, dataTypeId):
    return _devkit.GDAAttributeSetDataTypeId(attributeId, dataTypeId)
GDAAttributeSetDataTypeId = _devkit.GDAAttributeSetDataTypeId

def GDAConnectionCreate(sourceAttributeId, destinationAttributeId, sourceIndex=None, destinationIndex=None):
    return _devkit.GDAConnectionCreate(sourceAttributeId, destinationAttributeId, sourceIndex, destinationIndex)
GDAConnectionCreate = _devkit.GDAConnectionCreate

def GDAConnectionIsValid(connectionId):
    return _devkit.GDAConnectionIsValid(connectionId)
GDAConnectionIsValid = _devkit.GDAConnectionIsValid

def GDAConnectionGetContainer(connectionId):
    return _devkit.GDAConnectionGetContainer(connectionId)
GDAConnectionGetContainer = _devkit.GDAConnectionGetContainer

def GDANodeCreate(name, type):
    return _devkit.GDANodeCreate(name, type)
GDANodeCreate = _devkit.GDANodeCreate

def GDANodeAddAttribute(nodeId, attributeId):
    return _devkit.GDANodeAddAttribute(nodeId, attributeId)
GDANodeAddAttribute = _devkit.GDANodeAddAttribute

def GDANodeGetName(nodeId):
    return _devkit.GDANodeGetName(nodeId)
GDANodeGetName = _devkit.GDANodeGetName

def GDANodeGetType(nodeId):
    return _devkit.GDANodeGetType(nodeId)
GDANodeGetType = _devkit.GDANodeGetType

def GDANodeGetTypeId(nodeId):
    return _devkit.GDANodeGetTypeId(nodeId)
GDANodeGetTypeId = _devkit.GDANodeGetTypeId

def GDANodeGetAttributesCount(nodeId):
    return _devkit.GDANodeGetAttributesCount(nodeId)
GDANodeGetAttributesCount = _devkit.GDANodeGetAttributesCount

def GDANodeGetAttribute(nodeId, index):
    return _devkit.GDANodeGetAttribute(nodeId, index)
GDANodeGetAttribute = _devkit.GDANodeGetAttribute

def GDANodeFindAttribute(nodeId, name, printError=True):
    return _devkit.GDANodeFindAttribute(nodeId, name, printError)
GDANodeFindAttribute = _devkit.GDANodeFindAttribute

def GDANodeGetContainer(nodeId):
    return _devkit.GDANodeGetContainer(nodeId)
GDANodeGetContainer = _devkit.GDANodeGetContainer

def GDANodeIsContainer(nodeId):
    return _devkit.GDANodeIsContainer(nodeId)
GDANodeIsContainer = _devkit.GDANodeIsContainer

def GDAContainerCreate(name, type):
    return _devkit.GDAContainerCreate(name, type)
GDAContainerCreate = _devkit.GDAContainerCreate

def GDAContainerAddNode(containerId, nodeId, forceRename=False):
    return _devkit.GDAContainerAddNode(containerId, nodeId, forceRename)
GDAContainerAddNode = _devkit.GDAContainerAddNode

def GDAContainerAddConnection(containerId, connectionId):
    return _devkit.GDAContainerAddConnection(containerId, connectionId)
GDAContainerAddConnection = _devkit.GDAContainerAddConnection

def GDAContainerSaveToGdaFile(containerId, filePath):
    return _devkit.GDAContainerSaveToGdaFile(containerId, filePath)
GDAContainerSaveToGdaFile = _devkit.GDAContainerSaveToGdaFile

def GDAContainerLoadFromGdaFile(containerId, filePath):
    return _devkit.GDAContainerLoadFromGdaFile(containerId, filePath)
GDAContainerLoadFromGdaFile = _devkit.GDAContainerLoadFromGdaFile

def GDAContainerSetVersion(containerId, version):
    return _devkit.GDAContainerSetVersion(containerId, version)
GDAContainerSetVersion = _devkit.GDAContainerSetVersion

def GDAContainerSetUpdateFramerate(containerId, updateFramerate):
    return _devkit.GDAContainerSetUpdateFramerate(containerId, updateFramerate)
GDAContainerSetUpdateFramerate = _devkit.GDAContainerSetUpdateFramerate

def GDAContainerFindNode(containerId, name, printError=True):
    return _devkit.GDAContainerFindNode(containerId, name, printError)
GDAContainerFindNode = _devkit.GDAContainerFindNode

def GDAContainerGetNodesCount(containerId):
    return _devkit.GDAContainerGetNodesCount(containerId)
GDAContainerGetNodesCount = _devkit.GDAContainerGetNodesCount

def GDAContainerGetNode(containerId, index):
    return _devkit.GDAContainerGetNode(containerId, index)
GDAContainerGetNode = _devkit.GDAContainerGetNode

def GDAContainerGetConnectionsCount(containerId):
    return _devkit.GDAContainerGetConnectionsCount(containerId)
GDAContainerGetConnectionsCount = _devkit.GDAContainerGetConnectionsCount

def GDAContainerGetConnection(containerId, index):
    return _devkit.GDAContainerGetConnection(containerId, index)
GDAContainerGetConnection = _devkit.GDAContainerGetConnection

def GDAContainerGetVersion(containerId):
    return _devkit.GDAContainerGetVersion(containerId)
GDAContainerGetVersion = _devkit.GDAContainerGetVersion

def GDAContainerComputeAttributesShortestUniqueNames(containerId):
    return _devkit.GDAContainerComputeAttributesShortestUniqueNames(containerId)
GDAContainerComputeAttributesShortestUniqueNames = _devkit.GDAContainerComputeAttributesShortestUniqueNames

def GDAContainerisContaminated(containerId):
    return _devkit.GDAContainerisContaminated(containerId)
GDAContainerisContaminated = _devkit.GDAContainerisContaminated

def GDANodesEqual(*args):
    return _devkit.GDANodesEqual(*args)
GDANodesEqual = _devkit.GDANodesEqual
# This file is compatible with both classic and new-style classes.


